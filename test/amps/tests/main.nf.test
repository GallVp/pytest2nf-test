nextflow_process {

    name "Test Process AMPS"
    script "../main.nf"
    process "AMPS"
   
    tag "modules"
    tag "amps"
   
    test("test_amps") {
        
        setup {
        
            run("UNZIP_MALT") {
                script "../../../unzip/malt/main.nf"
                process {
                    """
                    input[0] = [[],file("s3://ngi-igenomes/test-data/createtaxdb/taxonomy/megan-nucl-Feb2022.db.zip",checkIfExists:true)]
                    """
                }
            }
            
            run("UNZIP_MALTEXTRACT") {
                script "../../../unzip/maltextract/main.nf"
                process {
                    """
                    input[0] = [[],file(params.test_data['sarscov2']['genome']['ncbi_taxmap_zip'],checkIfExists:true)]
                    """
                }
            }
            
            run("MALT_BUILD") {
                script "../../../malt/build/main.nf"
                process {
                    """
                    input[0] = file(params.test_data['sarscov2']['genome']['genome_fasta'],checkIfExists:true)
                    input[1] = []
                    input[2] = UNZIP_MALT.out.unzipped_archive.map{it[1]}
                    """
                }
            }
            
            run("MALT_RUN") {
                script "../../../malt/run/main.nf"
                process {
                    """
                    input[0] = [
                        [id:'test',single_end:false],// meta map
                        file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'],checkIfExists:true)
                        ]
                    input[1] = MALT_BUILD.out.index
                    """
                }
            }
            
            run("MALTEXTRACT") {
                script "../../../maltextract/main.nf"
                process {
                    """
                    input[0] = MALT_RUN.out.rma6.map{it[1]}
                    input[1] = file(params.test_data['sarscov2']['genome']['taxon_list_txt'],checkIfExists:true)
                    input[2] = UNZIP_MALTEXTRACT.out.unzipped_archive.map{it[1]}
                    """
                }
            }
        
        }
        
        when {
            process {
                """
                input[0] = MALTEXTRACT.out.results
                input[1] = file(params.test_data['sarscov2']['genome']['taxon_list_txt'],checkIfExists:true)
                input[2] = false
                """
            }    
        }
    
        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    
    }
}